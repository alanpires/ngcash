version: '3.1'

services:
  db:
    image: postgres
    container_name: db
    restart: unless-stopped 
    ports:
      - 5433:5432
    env_file:
      - .env
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER --dbname=$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  nginx:
    depends_on:
      - client
      - api
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 8008:80

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: api
    env_file:
      - .env
    volumes:
      - ./api:/home/node/app
      - node_modules_api:/home/node/app/node_modules
    command: sh -c "yarn typeorm migration:run -d src/data-source.ts && yarn swagger-autogen"
    ports:
      - 9000:9000
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST=db
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_DB=$POSTGRES_DB
    depends_on:
      db:
        condition: service_healthy
    stdin_open: true
    tty: true
  
  client:
    # Fix for hot reload for React apps inside of containers
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    restart: unless-stopped
    command: npm start
    env_file:
      - .env
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    depends_on:
      - api
    volumes:
      - ./client/:/srv/app
      - node_modules_client:/srv/app/node_modules

volumes:
  pgdata:
  node_modules_api:
  node_modules_client: