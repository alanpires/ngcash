version: '3.1'

services:
  postgres_database:
    image: postgres
    container_name: postgres_database
    # o container ir√° reiniciar a menos que seja interrompido.
    restart: unless-stopped 
    ports:
      - 5433:5432
    env_file:
      - .env
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST=postgres_database
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_DB=$POSTGRES_DB
    ports:
      - 3000:3000
    depends_on:
      postgres_database:
        condition: service_healthy
    command: sh -c "yarn typeorm migration:run -d src/data-source.ts && yarn swagger-autogen"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
    stdin_open: true
    tty: true

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  node_modules: